find.package(devtools)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
getwd
install.packages(swirl)
"swirl"
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5 + 7
x<-5 + 7
x
y <-x-3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
t <- c(z, 555, z)
t <- c($z, 555, $z)
c(z, 555, z)
z*2+100
my_sqrt <-(z-1)^[2]
my_sqrt <-(z-1)^2
my_sqrt <-sqrt(z-1)
my_sqrt
my_div <-z/my_sqrt
my_div
c(1, 2, 3, 4); c(0, 10)
c(1, 2, 3, 4)+ c(0, 10)
c(1:4)+c(0,10,100)
c(1:4)+c(0, 10, 100)
c(1:4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 100)
(z+2+1000)
(z*2+1000)
z*2+1000
my_sqrt
my_div
wd
getwd
getwd()
ls()
x<-9
ls()
dir()
?dir
args(dir)
list.files()
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create(testdir)
dir.create()
dir.create(old.dir/testdir)
dir.create(old.dir\testdir)
?dir.create
dir.create(getwd()/test)
dir.create(test)
dir.create(/test)
dir.create(./test)
dir.create(.\test)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls
ls()
cd "testdir"
getwd()
ls(getwd)
list.files()
pwd
dir
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2", recursive = TRUE)
dir.create("testdir2","testdir3", recursive = TRUE)
dir.create(file.path("testdir2","testdir3") recursive = TRUE)
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
15:1
?'+'
?`+`
?':'
seq(1,20)
seq(0,10,by = 0.5)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect (c(0.5,55,-10,6))
num_vect<-(c(0.5,55,-10,6))
num_vect <- (c(0.5, 55, -10, 6))
info()
num_vect <- (c(0.5, 55, -10, 6))
?c
num_vect <- (c(0.5, 55, "-10", 6))
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect>1
tf <- num_vect<1
tf
num_vect>=6
my_char <- ("my", "name", "is")
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char)
paste(my_char, colapse =" ")
paste(my_char, collapse =" ")
c(my_char, "Julian")
my_name <- c(my_char, "Julian")
my_name
paste(my_name, collapse =" ")
paste("Hello", "World", sep =" ")
paste("Hello", "world", sep =" ")
paste("Hello", "world!", sep =" ")
c("X","Y","Z", sep="")
paste (1:3, c("X","Y","Z"), sep="")
class(paste (1:3, c("X","Y","Z"), sep="")()
ccub1kDydZ7NVJBFccub1kDydZ7NVJBF
class(paste (1:3, c("X","Y","Z"), sep=""))
paste(Letters, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
x<-  c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z <-rep(NA,1000)
my_data <- sample (c(y, z),100)
my_na <-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
my_data/0
0/0
Inf-Inf
info()
main()
main()
x z-
x <- rep(NA, times = 20)
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[3,5,7]
x[c(3,5,7)]
(i.e. x[0])
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(x)
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
info()
main()
my_vector(1:20)
my_vector <-(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,nrow4, ncol= 5)
my_matrix2 <- matrix(1:20,nrow= 4, ncol= 5)
identical(my_matrix, my_matrix2)
patiens <- c("Bill","Gina", "Kelly", "Sean")
patients <- c("Bill","Gina", "Kelly", "Sean")
cbind(patiens, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data)<- cnames
my_data
x<-c("a","b","c","d")
for (i in 1:4){print(x[i])}
for (i in 1:5){print(x[i])}
above <- function(x,n){
use <- x > n
x[use]
}
above (5 , 10)
above (11 , 10)
x<-(1:20)
above (x , 10)
above <- function(x,n=17){
use <- x > n
x[use]
}
above (x , 10)
above (x)
date
swirl()
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
5!=7
5!7
5 not 7
!(5=7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE).
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints >5
which(inst > 7)
which(ints > 7)
any(ints < 0)
all(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
submit
submit()
my_mean c(4,5,10)
my_mean( c(4,5,10))
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate (c(1.4, 3.6, 7.9, 8.8))
evaluate (sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
x<-c(8,4,0)
x<-c(8,4,0) evaluate(function(x){x+1}, 6)
x<-c(8,4,0) & evaluate(function(x){x+1}, 6)
info()
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram(HOLA)
telegram("HOLA")
submit()
mad_libs(place="MAdrid", adjective= "smart", noum = software)
mad_libs(c(place="MAdrid", adjective= "smart", noum = "software"))
submit
submit()
submit()
submit()
submit()
'I' %p%'love' %p% 'R!'
d<- Sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <-Sys.time()
t21
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3<- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
gwd
swd
getwd
getwd()
setwd(C:/Users/sanchj67/Documents/Coursera)
setwd("C:/Users/sanchj67/Documents/Coursera")
getwd()
directory <- ("./specdata/")
all_files <- as.character( list.files(directory) )
all_files()
list.files
list.files()
setwd("C:/Users/sanchj67/Documents/Coursera/Data Sciencist/specdata/")
getwd()
setwd("C:/Users/sanchj67/Documents/Coursera/Data Sciencist)
""
C:/Users/sanchj67/Documents/Coursera"
setwd("C:/Users/sanchj67/Documents/Coursera/Data Sciencist")
all_files <- as.character( list.files("./specdata") )
all_files
outcome_file <- paste("./specdata", list_files, sep="")
list_files <- as.character( list.files("./specdata") )
outcome_file <- paste("./specdata", list_files, sep="")
outcome_file
outcome_file <- paste("./specdata", list_files, sep=",")
outcome_file
source(polluntnatmean.r)
ls
ls()รง
ls()
dir
dir()
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
id_file
id_file()
id_file(1)
pollutantmean(directory = "./specdata/")
pollutantmean(directory = "./specdata/")
pollutantmean(directory = "./specdata/")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("./specdata/", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
directory
full_path+
full_path
list_files
full_path
View(evaluate)
View(evaluate)
full_path
list_files
directrory
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("./specdata/", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
x<- paste("/","a","b", sep="")
x
y<- getwd
y+x
paste(x,y)
x<- paste("/", directory,"b", sep="")
x
folder
pollutantmean("specdata", "sulfate", 1:10)
folder
list_files
folder
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
full_path
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
getwd
getwd()
dir
dir()
source(pollutandmena.R)
source(pollutandmean.R)
source(pollutantmean.R)
getwd  ()
dir
dir()
pollutantmean("specdata", "sulfate", 1:10)
